stopy<-stopy %>% select(DAX,FTM,SHC,SPX,WIG20)
stopy
stopy<-stopy[,2:6]
stopy
#zbadanie stacjonarności stóp zwrotu
library(tseries)
adf.test(stopy[,1],alternative = c("stationary"))
adf.test(stopy[,2],alternative = c("stationary"))
adf.test(stopy[,3],alternative = c("stationary"))
adf.test(stopy[,4],alternative = c("stationary"))
adf.test(stopy[,5],alternative = c("stationary"))
#wybór rzędu opóźnień
stopy
library(vars)
VARselect(stopy)
vars::VARselect(stopy)
vars::VARselect(stopy, lag.max = 4)
vars::VARselect(stopy, lag.max = 2)
vars::VARselect(stopy)
v<-VARselect(stopy)
summary(v)
v
v$criteria
v$selection
v<-VARselect(stopy, type = "const")
v$selection
v<-VARselect(stopy)
#wybór rzędu opóźnień
stopy
v<-VARselect(stopy)
v
View(logstopy)
View(stopy)
ftse <- read_csv("~/Downloads/^ftse.csv")
ftse <- read_csv("~/Downloads/ftse.csv")
ftse
wig20 <- read_csv("~/Downloads/wig20_d-2.csv")
library(readr)
dax <- read_csv("~/Downloads/^dax_d.csv")
dax<-dax[,c(1,5)]
ftse <- read_csv("~/Downloads/ftse.csv")
ftse<-ftse[,c(1,5)]
shc <- read_csv("~/Downloads/^shc_d.csv")
shc<-shc[,c(1,5)]
spx <- read_csv("~/Downloads/^spx_d.csv")
spx<-spx[,c(1,5)]
wig20 <- read_csv("~/Downloads/wig20_d-2.csv")
wig20<-wig20[,c(1,5)]
#utworzenie jednego data frame, na w miejscu braku obserwacji
library(dplyr)
daxFTSE<-full_join(dax, FTSE, by="Data")
dfs<-full_join(daxFTSE, shc, by="Data")
dfss<-full_join(dfs, spx, by="Data")
dfssw<-full_join(dfss, wig20, by="Data")
data<-dfssw
colnames(data)<-c("Data", "DAX", "FTSE", "SHC", "SPX", "WIG20")
sum(is.na(data))
data<-arrange(data, Data)
sum(is.na(data))
#interpolacja
library(zoo)
daneN<-data.frame("Data"=data$Data, "DAX"=DAX_no_NA, "FTSE"=FTSE_no_NA, "SHC"=SHC_no_NA, "SPX"=SPX_no_NA, "WIG20"=WIG20_no_NA)
#interpolacja
library(zoo)
DAX_no_NA<-na.approx(data$DAX, na.rm = FALSE)
FTSE_no_NA<-na.approx(data$FTSE, na.rm = FALSE)
SHC_no_NA<-na.approx(data$SHC, na.rm = FALSE)
SPX_no_NA<-na.approx(data$SPX, na.rm = FALSE)
WIG20_no_NA<-na.approx(data$WIG20, na.rm = FALSE)
sum(is.na(DAX_no_NA))
daneN<-data.frame("Data"=data$Data, "DAX"=DAX_no_NA, "FTSE"=FTSE_no_NA, "SHC"=SHC_no_NA, "SPX"=SPX_no_NA, "WIG20"=WIG20_no_NA)
stopy<-data.frame(0)
stopy <- data.frame(daneN$Data[2: nrow(daneN)])
for(i in 2:(nrow(daneN)))
{
stopy[i-1,2]=log(daneN[i,2]/daneN[i-1,2])
stopy[i-1,3]=log(daneN[i,3]/daneN[i-1,3])
stopy[i-1,4]=log(daneN[i,4]/daneN[i-1,4])
stopy[i-1,5]=log(daneN[i,5]/daneN[i-1,5])
stopy[i-1,6]=log(daneN[i,6]/daneN[i-1,6])
}
colnames(stopy)<-c("Data", "DAX", "FTSE", "SHC", "SPX", "WIG20")
stopy
stopy<-stopy[,2:6]
#zbadanie stacjonarności stóp zwrotu
library(tseries)
adf.test(stopy[,1],alternative = c("stationary"))
adf.test(stopy[,2],alternative = c("stationary"))
adf.test(stopy[,3],alternative = c("stationary"))
adf.test(stopy[,4],alternative = c("stationary"))
adf.test(stopy[,5],alternative = c("stationary"))
#wybór rzędu opóźnień
stopy
library(vars)
VARselect(stopy)
library(readr)
dax <- read_csv("~/Downloads/^dax_d.csv")
dax<-dax[,c(1,5)]
ftse <- read_csv("~/Downloads/ftse.csv")
ftse<-ftse[,c(1,5)]
shc <- read_csv("~/Downloads/^shc_d.csv")
shc<-shc[,c(1,5)]
spx <- read_csv("~/Downloads/^spx_d.csv")
spx<-spx[,c(1,5)]
wig20 <- read_csv("~/Downloads/wig20_d-2.csv")
wig20<-wig20[,c(1,5)]
#utworzenie jednego data frame, na w miejscu braku obserwacji
library(dplyr)
daxFTSE<-full_join(dax, FTSE, by="Data")
daxFTSE<-full_join(dax, ftse, by="Data")
dfs<-full_join(daxFTSE, shc, by="Data")
dfss<-full_join(dfs, spx, by="Data")
dfssw<-full_join(dfss, wig20, by="Data")
data<-dfssw
colnames(data)<-c("Data", "DAX", "FTSE", "SHC", "SPX", "WIG20")
sum(is.na(data))
data<-arrange(data, Data)
sum(is.na(data))
#interpolacja
library(zoo)
DAX_no_NA<-na.approx(data$DAX, na.rm = FALSE)
FTSE_no_NA<-na.approx(data$FTSE, na.rm = FALSE)
SHC_no_NA<-na.approx(data$SHC, na.rm = FALSE)
SPX_no_NA<-na.approx(data$SPX, na.rm = FALSE)
WIG20_no_NA<-na.approx(data$WIG20, na.rm = FALSE)
sum(is.na(DAX_no_NA))
daneN<-data.frame("Data"=data$Data, "DAX"=DAX_no_NA, "FTSE"=FTSE_no_NA, "SHC"=SHC_no_NA, "SPX"=SPX_no_NA, "WIG20"=WIG20_no_NA)
stopy<-data.frame(0)
stopy <- data.frame(daneN$Data[2: nrow(daneN)])
for(i in 2:(nrow(daneN)))
{
stopy[i-1,2]=log(daneN[i,2]/daneN[i-1,2])
stopy[i-1,3]=log(daneN[i,3]/daneN[i-1,3])
stopy[i-1,4]=log(daneN[i,4]/daneN[i-1,4])
stopy[i-1,5]=log(daneN[i,5]/daneN[i-1,5])
stopy[i-1,6]=log(daneN[i,6]/daneN[i-1,6])
}
colnames(stopy)<-c("Data", "DAX", "FTSE", "SHC", "SPX", "WIG20")
stopy
stopy<-stopy[,2:6]
#zbadanie stacjonarności stóp zwrotu
library(tseries)
adf.test(stopy[,1],alternative = c("stationary"))
adf.test(stopy[,2],alternative = c("stationary"))
adf.test(stopy[,3],alternative = c("stationary"))
adf.test(stopy[,4],alternative = c("stationary"))
adf.test(stopy[,5],alternative = c("stationary"))
#wybór rzędu opóźnień
stopy
library(vars)
VARselect(stopy)
stopy
sum(is.na(DAX_no_NA))
daneN<-daneN[1:2585,]
daneN<-data.frame("Data"=data$Data, "DAX"=DAX_no_NA, "FTSE"=FTSE_no_NA, "SHC"=SHC_no_NA, "SPX"=SPX_no_NA, "WIG20"=WIG20_no_NA)
sum(is.na(daneN))
daneN<-daneN[1:2585,]
daneN<-data.frame("Data"=data$Data, "DAX"=DAX_no_NA, "FTSE"=FTSE_no_NA, "SHC"=SHC_no_NA, "SPX"=SPX_no_NA, "WIG20"=WIG20_no_NA)
sum(is.na(daneN))
daneN<-daneN[1:2585,]
sum(is.na(daneN))
stopy<-data.frame(0)
stopy <- data.frame(daneN$Data[2: nrow(daneN)])
for(i in 2:(nrow(daneN)))
{
stopy[i-1,2]=log(daneN[i,2]/daneN[i-1,2])
stopy[i-1,3]=log(daneN[i,3]/daneN[i-1,3])
stopy[i-1,4]=log(daneN[i,4]/daneN[i-1,4])
stopy[i-1,5]=log(daneN[i,5]/daneN[i-1,5])
stopy[i-1,6]=log(daneN[i,6]/daneN[i-1,6])
}
colnames(stopy)<-c("Data", "DAX", "FTSE", "SHC", "SPX", "WIG20")
stopy
stopy<-stopy[,2:6]
#zbadanie stacjonarności stóp zwrotu
library(tseries)
adf.test(stopy[,1],alternative = c("stationary"))
adf.test(stopy[,2],alternative = c("stationary"))
adf.test(stopy[,3],alternative = c("stationary"))
adf.test(stopy[,4],alternative = c("stationary"))
adf.test(stopy[,5],alternative = c("stationary"))
#wybór rzędu opóźnień
stopy
library(vars)
VARselect(stopy)
var2 <- VAR(stopy, p=2)
var2
#test restrykcji - to juz nie potrzebne
restrict <- matrix(c(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
nrow=5, ncol=11, byrow=TRUE)
restrict(var2, method ="man", resmat = restrict)
View(wig20)
View(FTSE_no_NA)
var2
library(readr)
dax <- read_csv("~/Downloads/^dax_d.csv")
dax<-dax[,c(1,5)]
ftse <- read_csv("~/Downloads/ftse.csv")
ftse<-ftse[,c(1,5)]
shc <- read_csv("~/Downloads/^shc_d.csv")
shc<-shc[,c(1,5)]
spx <- read_csv("~/Downloads/^spx_d.csv")
spx<-spx[,c(1,5)]
wig20 <- read_csv("~/Downloads/wig20_d-2.csv")
wig20<-wig20[,c(1,5)]
#utworzenie jednego data frame, na w miejscu braku obserwacji
library(dplyr)
daxFTSE<-full_join(dax, ftse, by="Data")
dfs<-full_join(daxFTSE, shc, by="Data")
dfss<-full_join(dfs, spx, by="Data")
dfssw<-full_join(dfss, wig20, by="Data")
data<-dfssw
colnames(data)<-c("Data", "DAX", "FTSE", "SHC", "SPX", "WIG20")
sum(is.na(data))
data<-arrange(data, Data)
sum(is.na(data))
#interpolacja
library(zoo)
DAX_no_NA<-na.approx(data$DAX, na.rm = FALSE)
FTSE_no_NA<-na.approx(data$FTSE, na.rm = FALSE)
SHC_no_NA<-na.approx(data$SHC, na.rm = FALSE)
SPX_no_NA<-na.approx(data$SPX, na.rm = FALSE)
WIG20_no_NA<-na.approx(data$WIG20, na.rm = FALSE)
daneN<-data.frame("Data"=data$Data, "DAX"=DAX_no_NA, "FTSE"=FTSE_no_NA, "SHC"=SHC_no_NA, "SPX"=SPX_no_NA, "WIG20"=WIG20_no_NA)
daneN<-daneN[1:2585,]
sum(is.na(daneN))
stopy<-data.frame(0)
stopy <- data.frame(daneN$Data[2: nrow(daneN)])
for(i in 2:(nrow(daneN)))
{
stopy[i-1,2]=log(daneN[i,2]/daneN[i-1,2])
stopy[i-1,3]=log(daneN[i,3]/daneN[i-1,3])
stopy[i-1,4]=log(daneN[i,4]/daneN[i-1,4])
stopy[i-1,5]=log(daneN[i,5]/daneN[i-1,5])
stopy[i-1,6]=log(daneN[i,6]/daneN[i-1,6])
}
colnames(stopy)<-c("Data", "DAX", "FTSE", "SHC", "SPX", "WIG20")
stopy
stopy<-stopy[,2:6]
#zbadanie stacjonarności stóp zwrotu
library(tseries)
adf.test(stopy[,1],alternative = c("stationary"))
adf.test(stopy[,2],alternative = c("stationary"))
adf.test(stopy[,3],alternative = c("stationary"))
adf.test(stopy[,4],alternative = c("stationary"))
adf.test(stopy[,5],alternative = c("stationary"))
#wybór rzędu opóźnień
stopy
library(vars)
VARselect(stopy)
var1 <- VAR(stopy, p=1)
summary(var1)
Box.test(var1$varresult$DAX$residuals, lag =1, type=c("Ljung-Box"))
Box.test(var1$varresult$FTSE$residuals, lag =1, type=c("Ljung-Box"))
Box.test(var1$varresult$SHC$residuals, lag =1, type=c("Ljung-Box"))
Box.test(var1$varresult$SPX$residuals, lag =1, type=c("Ljung-Box"))
Box.test(var1$varresult$WIG20$residuals, lag =1, type=c("Ljung-Box"))
shapiro.test(var1$varresult$DAX$residuals)
shapiro.test(var1$varresult$FTSE$residuals)
shapiro.test(var1$varresult$SHC$residuals)
shapiro.test(var1$varresult$SPX$residuals)
shapiro.test(var1$varresult$WIG20$residuals)
var2 <- VAR(stopy, p=2)
Box.test(var2$varresult$DAX$residuals, lag =2, type=c("Ljung-Box"))
Box.test(var2$varresult$FTSE$residuals, lag =2, type=c("Ljung-Box"))
Box.test(var2$varresult$SHC$residuals, lag =2, type=c("Ljung-Box"))
Box.test(var2$varresult$SPX$residuals, lag =2, type=c("Ljung-Box"))
Box.test(var2$varresult$WIG20$residuals, lag =2, type=c("Ljung-Box"))
shapiro.test(var2$varresult$DAX$residuals)
shapiro.test(var2$varresult$FTSE$residuals)
shapiro.test(var2$varresult$SHC$residuals)
shapiro.test(var2$varresult$SPX$residuals)
shapiro.test(var2$varresult$WIG20$residuals)
#H0: brak przyczynowosci w sensie Grangera - beta = 0
#H1 ~ H0
causality(var2, cause = "DAX")$Granger
causality(var2, cause = "FTSE")$Granger
causality(var2, cause = "SHC")$Granger
causality(var2, cause = "SPX")$Granger
causality(var2, cause = "WIG20")$Granger
summary(var2)
knitr::opts_chunk$set(echo = TRUE)
confint(mnw_2)
```{r}
confint(mnw_2, level = 0.95)
```
-------------jeszcze kryteria informacyjne i prognoza przedziałowa ---------
?? runs.test
prognozaTest<-c(predict.lm(mnw_2, testowy))
DaneZ4 <- read.csv2("~/Downloads/DaneZ4.csv")
set.seed(293435)
indeks<-sample(1:1000, size = 750, replace = FALSE)
uczacy<-DaneZ4[indeks,]
testowy<-DaneZ4[-indeks,]
library(psych)
describe(DaneZ4)
zmiennosc<-function(dane)
{
wspzmienn<-describe(dane)$sd/describe(dane)$mean*100
return(wspzmienn)
}
zmienn<-data.frame(0)
zmienn$y<-zmiennosc(DaneZ4$y)
zmienn$x<-zmiennosc(DaneZ4$x)
zmienn$x2<-zmiennosc(DaneZ4$x2)
zmienn
boxplot(DaneZ4$y)
boxplot(DaneZ4$x)
boxplot(DaneZ4$x2)
g = DaneZ4$y
m<-mean(g)
std<-sqrt(var(g))
h <- hist(g, breaks = 20, density = 20,
col = "lightgray", xlab = "Accuracy", main = "Overall")
xfit <- seq(min(g), max(g), length = 40)
yfit <- dnorm(xfit, mean = mean(g), sd = sd(g))
yfit <- yfit * diff(h$mids[1:2]) * length(g)
lines(xfit, yfit, col = "black", lwd = 2)
g = DaneZ4$x
m<-mean(g)
std<-sqrt(var(g))
h <- hist(g, breaks = 20, density = 20,
col = "lightgray", xlab = "Accuracy", main = "Overall")
xfit <- seq(min(g), max(g), length = 40)
yfit <- dnorm(xfit, mean = mean(g), sd = sd(g))
yfit <- yfit * diff(h$mids[1:2]) * length(g)
lines(xfit, yfit, col = "black", lwd = 2)
g = DaneZ4$x2
m<-mean(g)
std<-sqrt(var(g))
h <- hist(g, breaks = 20, density = 20,
col = "lightgray", xlab = "Accuracy", main = "Overall")
xfit <- seq(min(g), max(g), length = 40)
yfit <- dnorm(xfit, mean = mean(g), sd = sd(g))
yfit <- yfit * diff(h$mids[1:2]) * length(g)
lines(xfit, yfit, col = "black", lwd = 2)
#zad.2
library(corrgram)
corrgram(DaneZ4,upper.panel=panel.cor,
text.panel=panel.txt,main="Korelacja Pearsona", diag.panel=panel.density )
uczacyL<-uczacyL[-686,]
yLog<-log(uczacyL$y)
uczacyL$y<-yLog
corrgram((uczacyL),upper.panel=panel.cor,
text.panel=panel.txt,main="Korelacja Pearsona", diag.panel=panel.density )
#zad.3
model<-lm(y~x+x2, data = uczacy)
model
summary(model)
library(tseries)
jarque.bera.test(model$residuals)
library(olsrr)
ols_test_breusch_pagan(model)
nll <- function(theta0,theta1,theta2) {
x <- uczacyL$x
x2 <- uczacyL$x2
y <- uczacyL$y
mu = exp(theta0 + x*theta1 + x2*theta2)
-sum(y*(log(mu)) - mu)
}
#wyestymuj mnk parametry, potem podstaw jako theta
est <- bbmle::mle2(minuslog=nll, start=list(theta0=2,theta1=0,theta2=0))
summary(est)
library(bbmle)
model2<-lm(y~x, data = uczacy)
summary(model2)
nll2 <- function(theta0,theta1) {
x <- uczacyL$x
y <- uczacyL$y
mu = exp(theta0 + x*theta1)
-sum(y*(log(mu)) - mu)
}
mnw_2 <- bbmle::mle2(minuslog=nll2, start=list(theta0= 4.33127,theta1=0.57669))
uczacyL<-uczacyL[-686,]
uczacyL<-uczacy[-686,]
yLog<-log(uczacyL$y)
uczacyL$y<-yLog
corrgram((uczacyL),upper.panel=panel.cor,
text.panel=panel.txt,main="Korelacja Pearsona", diag.panel=panel.density )
#zad.3
model<-lm(y~x+x2, data = uczacy)
model
summary(model)
library(tseries)
jarque.bera.test(model$residuals)
library(olsrr)
ols_test_breusch_pagan(model)
nll <- function(theta0,theta1,theta2) {
x <- uczacyL$x
x2 <- uczacyL$x2
y <- uczacyL$y
mu = exp(theta0 + x*theta1 + x2*theta2)
-sum(y*(log(mu)) - mu)
}
#wyestymuj mnk parametry, potem podstaw jako theta
est <- bbmle::mle2(minuslog=nll, start=list(theta0=2,theta1=0,theta2=0))
summary(est)
library(bbmle)
model2<-lm(y~x, data = uczacy)
summary(model2)
nll2 <- function(theta0,theta1) {
x <- uczacyL$x
y <- uczacyL$y
mu = exp(theta0 + x*theta1)
-sum(y*(log(mu)) - mu)
}
mnw_2 <- bbmle::mle2(minuslog=nll2, start=list(theta0= 4.33127,theta1=0.57669))
summary(mnw_2)
predict.lm(mnw_2, testowy)
predict(mnw_2, testowy)
predict(object=mnw_2, testowy)
predict(object=mnw_2)
predict(object=mnw_2, newdata=list(y=log(testowy$y), x=log(testowy$x)))
mnw_2
predict(object=nll2, newdata=list(y=log(testowy$y), x=log(testowy$x)))
testowyL<-log(testowy)
testowyL
testowy
View(testowy)
testowyL<-log(testowy$x)
testowyL
which(is.na(testowyL))
ind<-which(is.na(testowyL))
testowyL<-testowyL[-ind]
pred.ts <- (exp(coef(mnw_2)['theta0'] + testowyL$x*coef(mnw_2)['theta1'] ))
pred.ts <- (exp(coef(mnw_2)['theta0'] + testowyL*coef(mnw_2)['theta1'] ))
pred.ts
testowyL<-log(testowy)
ind<-which(is.na(testowyL))
testowyL<-testowyL[-ind]
View(testowyL)
View(testowyL)
pred.ts <- (exp(coef(mnw_2)['theta0'] + testowyL$x*coef(mnw_2)['theta1'] ))
pred.ts
which(is.na(testowyL))
ind<-which(is.na(testowyL))
ind
testowyL<-testowyL[-ind]
testowyL
ind<-which(is.na(testowyL$x))
testowyL<-testowyL[-ind]
testowyL
testowyL<-log(testowy)
ind<-which(is.na(testowyL$x))
ind
testowyL<-testowyL[-ind]
testowyL
testowyL<-log(testowy)
testowyL
which(is.infinite(testowyL$x))
which(is.finite(testowyL$x))
nll <- function(theta0,theta1,theta2) {
x <- uczacyL$x
x2 <- uczacyL$x2
y <- uczacyL$y
mu = exp(theta0 + x*theta1 + x2*theta2)
-sum(y*(log(mu)) - mu)
}
#wyestymuj mnk parametry, potem podstaw jako theta
est <- bbmle::mle2(minuslog=nll, start=list(theta0=2,theta1=0,theta2=0))
summary(est)
library(bbmle)
model2<-lm(y~x, data = uczacy)
summary(model2)
nll2 <- function(theta0,theta1) {
x <- uczacyL$x
y <- uczacyL$y
mu = exp(theta0 + x*theta1)
-sum(y*(log(mu)) - mu)
}
mnw_2 <- bbmle::mle2(minuslog=nll2, start=list(theta0= 4.33127,theta1=0.57669))
summary(mnw_2)
pred.ts <- (exp(coef(mnw_2)['theta0'] + testowy$x*coef(mnw_2)['theta1'] ))
pred.ts
testowy
testowyL<-testowy
testowyL$y<-log(testowyL$y)
testowyL
testowy
which(testowy$x==0)
which(testowy$y==0)
zera<-which(testowy$y==0)
testowyL<-testowy[-zera]
testowyL
testowyL<-testowy[-zera,]
testowyL
testowyL$y<-log(testowyL$y)
testowyL
pred.ts <- (exp(coef(mnw_2)['theta0'] + testowy$x*coef(mnw_2)['theta1'] ))
pred.ts
prognozaTest
prognoza <- (exp(coef(mnw_2)['theta0'] + testowy$x*coef(mnw_2)['theta1'] ))
Ex_Post<-testowyL$y-prognoza
testowyL$y
prognoza <- (exp(coef(mnw_2)['theta0'] + testowyL$x*coef(mnw_2)['theta1'] ))
Ex_Post<-testowyL$y-prognoza
Ex_Post
sredni_Ex_Post<-mean(Ex_Post)
sredni_Ex_Post
Ex_Post_abs<-abs(testowyL$y-prognoza)
sredni_Ex_Post_abs<-mean(Ex_Post_abs)
sredni_Ex_Post_abs
Ex_Post_kw<-(testowyL$y-prognoza)^2
sredni_Ex_Post<-mean(Ex_Post_kw)
sqrt(sredni_Ex_Post)
Ex_Post_abs<-abs((testowyL$y-prognoza)/testowyL$y)*100
sredni_Ex_Post_abs<-mean(Ex_Post_abs)
sredni_Ex_Post_abs
